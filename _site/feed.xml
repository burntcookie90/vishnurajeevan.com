<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-11-03T13:14:33-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Vishnu Rajeevan</title><subtitle>Just stuff</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2022/11/03/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2022-11-03T12:11:24-04:00</published><updated>2022-11-03T12:11:24-04:00</updated><id>http://localhost:4000/jekyll/update/2022/11/03/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2022/11/03/welcome-to-jekyll.html"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry><entry><title type="html">Self Hosting Mastodon with Docker-Compose and Traefik</title><link href="http://localhost:4000/2022/11/03/self-hosting-mastodon-with-docker-compose-and-traefik.html" rel="alternate" type="text/html" title="Self Hosting Mastodon with Docker-Compose and Traefik" /><published>2022-11-03T00:00:00-04:00</published><updated>2022-11-03T00:00:00-04:00</updated><id>http://localhost:4000/2022/11/03/self-hosting-mastodon-with-docker-compose-and-traefik</id><content type="html" xml:base="http://localhost:4000/2022/11/03/self-hosting-mastodon-with-docker-compose-and-traefik.html"><![CDATA[<p>(This assumes you have a running traefik instance)</p>

<p>Use <code class="language-plaintext highlighter-rouge">.env.production</code> from <a href="https://github.com/mastodon/mastodon/blob/main/.env.production.sample">github</a>.</p>

<p>Things to edit:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">LOCAL_DOMAIN</span><span class="o">=</span>example.com
<span class="nv">WEB_DOMAIN</span><span class="o">=</span>mastodon.example.com <span class="c">#This is optional and only needed if your instance is hosted on a subdomain, but you want the instance to be known by its domain.</span>
<span class="nv">SINGLE_USER_MODE</span><span class="o">=</span><span class="nb">true</span> <span class="c">#Optional, only needed if you're hosting for just yourself</span>

<span class="c"># Sending mail</span>
<span class="c"># ------------</span>
<span class="nv">SMTP_SERVER</span><span class="o">=</span>&lt;smtp host&gt;
<span class="nv">SMTP_PORT</span><span class="o">=</span>587
<span class="nv">SMTP_LOGIN</span><span class="o">=</span>&lt;username&gt;
<span class="nv">SMTP_PASSWORD</span><span class="o">=</span>&lt;password&gt;
<span class="nv">SMTP_FROM_ADDRESS</span><span class="o">=</span>&lt;address the mastodon instance will email from&gt;
</code></pre></div></div>

<p>Move <code class="language-plaintext highlighter-rouge">PostgreSQL</code> block to a <code class="language-plaintext highlighter-rouge">db.env</code> file so you can share with the postgres container.</p>

<p><code class="language-plaintext highlighter-rouge">db.env</code></p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># PostgreSQL</span>
<span class="c"># ----------</span>
<span class="nv">DB_HOST</span><span class="o">=</span>db
<span class="nv">DB_USER</span><span class="o">=</span>mastodon
<span class="nv">DB_NAME</span><span class="o">=</span>mastodon_production
<span class="nv">DB_PASS</span><span class="o">=</span>&lt;generated password&gt;
<span class="nv">DB_PORT</span><span class="o">=</span>5432

<span class="c"># Needed so that the pgsql container creates the exected roles and dbs for you</span>
<span class="nv">POSTGRES_DB</span><span class="o">=</span>mastodon_production
<span class="nv">POSTGRES_USER</span><span class="o">=</span>mastodon
<span class="nv">POSTGRES_PASSWORD</span><span class="o">=</span>&lt;generated password&gt;
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">docker-compose.yml</code> (sourced from <a href="https://github.com/mastodon/mastodon/blob/main/docker-compose.yml">github</a> and edited)</p>
<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">3'</span>
<span class="na">services</span><span class="pi">:</span>
  <span class="na">db</span><span class="pi">:</span>
    <span class="na">restart</span><span class="pi">:</span> <span class="s">always</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">postgres:14-alpine</span>
    <span class="na">shm_size</span><span class="pi">:</span> <span class="s">256mb</span>
    <span class="na">networks</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">internal_network</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">/mnt/user/appdata/mastodon/postgres14:/var/lib/postgresql/data</span>
    <span class="c1"># added from the default, otherwise you'll need to manually create a `mastodon` db and user/role</span>
    <span class="na">env_file</span><span class="pi">:</span> <span class="s">db.env</span>  
    <span class="na">environment</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s1">'</span><span class="s">POSTGRES_HOST_AUTH_METHOD=trust'</span>
  <span class="na">redis</span><span class="pi">:</span>
    <span class="na">restart</span><span class="pi">:</span> <span class="s">always</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">redis:7-alpine</span>
    <span class="na">networks</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">internal_network</span>
    <span class="na">healthcheck</span><span class="pi">:</span>
      <span class="na">test</span><span class="pi">:</span> <span class="pi">[</span><span class="s1">'</span><span class="s">CMD'</span><span class="pi">,</span> <span class="s1">'</span><span class="s">redis-cli'</span><span class="pi">,</span> <span class="s1">'</span><span class="s">ping'</span><span class="pi">]</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">/mnt/user/appdata/mastodon/redis:/data</span>

  <span class="na">web</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">tootsuite/mastodon</span>
    <span class="na">restart</span><span class="pi">:</span> <span class="s">always</span>
    <span class="na">env_file</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">.env.production</span>
      <span class="pi">-</span> <span class="s">db.env</span>
    <span class="na">command</span><span class="pi">:</span> <span class="s">bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"</span>
    <span class="na">networks</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">proxy</span>
      <span class="pi">-</span> <span class="s">internal_network</span>
    <span class="na">healthcheck</span><span class="pi">:</span>
      <span class="c1"># prettier-ignore</span>
      <span class="na">test</span><span class="pi">:</span> <span class="pi">[</span><span class="s1">'</span><span class="s">CMD-SHELL'</span><span class="pi">,</span> <span class="s1">'</span><span class="s">wget</span><span class="nv"> </span><span class="s">-q</span><span class="nv"> </span><span class="s">--spider</span><span class="nv"> </span><span class="s">--proxy=off</span><span class="nv"> </span><span class="s">localhost:3000/health</span><span class="nv"> </span><span class="s">||</span><span class="nv"> </span><span class="s">exit</span><span class="nv"> </span><span class="s">1'</span><span class="pi">]</span>
    <span class="na">depends_on</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">db</span>
      <span class="pi">-</span> <span class="s">redis</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">/mnt/user/appdata/mastodon/public/system:/mastodon/public/system</span>
    <span class="na">labels</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">traefik.enable=true</span>
      <span class="pi">-</span> <span class="s">traefik.http.routers.mastodonweb.rule=Host(`example.com`)</span>
      <span class="pi">-</span> <span class="s">traefik.http.routers.mastodonweb.entrypoints=&lt;https-entry-point&gt;</span>
      <span class="pi">-</span> <span class="s">traefik.http.routers.mastodonweb.tls.certresolver=letsencrypttls</span>
      <span class="pi">-</span> <span class="s">traefik.http.services.mastodonweb.loadbalancer.server.port=3000</span>

  <span class="na">streaming</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">tootsuite/mastodon</span>
    <span class="na">restart</span><span class="pi">:</span> <span class="s">always</span>
    <span class="na">env_file</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">.env.production</span>
      <span class="pi">-</span> <span class="s">db.env</span>
    <span class="na">command</span><span class="pi">:</span> <span class="s">node ./streaming</span>
    <span class="na">networks</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">proxy</span>
      <span class="pi">-</span> <span class="s">internal_network</span>
    <span class="na">healthcheck</span><span class="pi">:</span>
      <span class="c1"># prettier-ignore</span>
      <span class="na">test</span><span class="pi">:</span> <span class="pi">[</span><span class="s1">'</span><span class="s">CMD-SHELL'</span><span class="pi">,</span> <span class="s1">'</span><span class="s">wget</span><span class="nv"> </span><span class="s">-q</span><span class="nv"> </span><span class="s">--spider</span><span class="nv"> </span><span class="s">--proxy=off</span><span class="nv"> </span><span class="s">localhost:4000/api/v1/streaming/health</span><span class="nv"> </span><span class="s">||</span><span class="nv"> </span><span class="s">exit</span><span class="nv"> </span><span class="s">1'</span><span class="pi">]</span>
    <span class="na">depends_on</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">db</span>
      <span class="pi">-</span> <span class="s">redis</span>
    <span class="na">labels</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">traefik.enable=true</span>
      <span class="pi">-</span> <span class="s">traefik.http.routers.mastodonstreaming.rule=(Host(`example.com`) &amp;&amp; PathPrefix(/api/v1/streaming))</span>
      <span class="pi">-</span> <span class="s">traefik.http.routers.mastodonstreaming.entrypoints=&lt;https-entry-point&gt;</span>
      <span class="pi">-</span> <span class="s">traefik.http.routers.mastodonstreaming.tls.certresolver=letsencrypttls</span>
      <span class="pi">-</span> <span class="s">traefik.http.services.mastodonstreaming.loadbalancer.server.port=4000</span>


  <span class="na">sidekiq</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">tootsuite/mastodon</span>
    <span class="na">restart</span><span class="pi">:</span> <span class="s">always</span>
    <span class="na">env_file</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">.env.production</span>
      <span class="pi">-</span> <span class="s">db.env</span>
    <span class="na">command</span><span class="pi">:</span> <span class="s">bundle exec sidekiq</span>
    <span class="na">depends_on</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">db</span>
      <span class="pi">-</span> <span class="s">redis</span>
    <span class="na">networks</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">proxy</span>
      <span class="pi">-</span> <span class="s">internal_network</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">/mnt/user/appdata/mastodon/public/system:/mastodon/public/system</span>
    <span class="na">healthcheck</span><span class="pi">:</span>
      <span class="na">test</span><span class="pi">:</span> <span class="pi">[</span><span class="s1">'</span><span class="s">CMD-SHELL'</span><span class="pi">,</span> <span class="s2">"</span><span class="s">ps</span><span class="nv"> </span><span class="s">aux</span><span class="nv"> </span><span class="s">|</span><span class="nv"> </span><span class="s">grep</span><span class="nv"> </span><span class="s">'[s]idekiq</span><span class="se">\ </span><span class="s">6'</span><span class="nv"> </span><span class="s">||</span><span class="nv"> </span><span class="s">false"</span><span class="pi">]</span>


<span class="na">networks</span><span class="pi">:</span>
  <span class="c1">#the network that your traefik instance has access to</span>
  <span class="na">proxy</span><span class="pi">:</span>
    <span class="na">external</span><span class="pi">:</span> <span class="no">true</span>
  <span class="na">internal_network</span><span class="pi">:</span>
    <span class="na">internal</span><span class="pi">:</span> <span class="no">true</span>
</code></pre></div></div>

<p>Run the following:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose run <span class="nt">--rm</span> web rake secret  <span class="c">#copy to SECRET_KEY_BASE in .env.production</span>
docker-compose run <span class="nt">--rm</span> web rake secret  <span class="c">#copy to OTP_SECRET in .env.production</span>
docker-compose run <span class="nt">--rm</span> web bundle <span class="nb">exec </span>rake mastodon:webpush:generate_vapid_key <span class="c">#copy to VAPID_* keys</span>
docker-compose <span class="nt">-f</span> run <span class="nt">--rm</span> web bundle <span class="nb">exec </span>rake db:migrate
docker-compose run <span class="nt">--rm</span> web bin/tootctl accounts create &lt;username&gt; <span class="nt">--email</span><span class="o">=</span>&lt;email&gt;
docker-compose run <span class="nt">--rm</span> web bin/tootctl accounts modify &lt;username&gt; <span class="nt">--confirm</span> <span class="nt">--approve</span> <span class="nt">--enable</span> <span class="nt">--role</span><span class="o">=</span>admin
</code></pre></div></div>

<p>Test that your instance’s web finger is setup right.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-vL</span> https://example.com/.well-known/webfinger?resource<span class="o">=</span>acct:@username@example.com
</code></pre></div></div>

<p>Will return json with redirects.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[(This assumes you have a running traefik instance)]]></summary></entry></feed>